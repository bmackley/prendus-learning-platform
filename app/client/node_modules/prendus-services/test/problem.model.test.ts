const assert = require('chai').assert;

import {FirebaseService} from '../firebase.service.ts';
import {ProblemModel} from '../problem.model.ts';

describe('ProblemModel tests', function() {

    describe('The user creates a new blank question', function() {
        it('should save a new question object when a falsy id is passed in', async function(done) {
            FirebaseService.init('AIzaSyBFco72QIZPNssZVjp8M_7XA7aOZO4UqZQ', 'resplendent-fire-9351.firebaseapp.com', 'https://resplendent-fire-9351.firebaseio.com', 'resplendent-fire-9351.appspot.com', 'Solutia Maxima');
            await FirebaseService.logInUserWithEmailAndPassword('prendus-api-server@gmail.com', 'theprendusapiserverisawesome');

            const text = 'This is the problem text';
            const code = 'This is the problem code';

            const problemId = await ProblemModel.save(undefined, {
                text,
                code
            });

            const retrievedProblem = await ProblemModel.getById(problemId);

            assert.equal(retrievedProblem.text, text);
            assert.equal(retrievedProblem.code, code);

            await ProblemModel.removeById(problemId);

            done();
        });
    });
});
