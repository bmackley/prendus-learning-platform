import {Blank} from '../interfaces/blank.interface.ts';
import {FirebaseService} from '../services/firebase.service.ts';

const dataPath = 'blank';

const save = async (id: string, data: Blank): Promise<string> => {
    if (id) {
        const path = dataPath + id;
        await FirebaseService.set(path, data);

        return id;
    }
    else {
        const timestampEnabledData = Object.assign({}, data, {
            timestamp: window.firebase.database.ServerValue.TIMESTAMP
        });

        const path = dataPath;
        return await FirebaseService.push(path, timestampEnabledData);
    }
};

const removeById = async (id: string): Promise<void> => {
    await FirebaseService.remove(`${dataPath}/${id}`);
};

const getById = async (id: string): Promise<Blank> => {
    const path = `${dataPath}/${id}`;
    const blank = await FirebaseService.get(path);
    return blank;
};

export const BlankModel = {
    save,
    getById,
    removeById
};
